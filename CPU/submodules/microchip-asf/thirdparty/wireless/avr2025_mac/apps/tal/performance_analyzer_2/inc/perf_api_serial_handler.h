/**
 * \file perf_api_serial_handler.h
 *
 * \brief This file contains macros and function prototypes for SIO handling.
 * - Performance Analyzer application for AT86RF215
 * Copyright (c) 2015-2018 Microchip Technology Inc. and its subsidiaries.
 *
 * \asf_license_start
 *
 * \page License
 *
 * Subject to your compliance with these terms, you may use Microchip
 * software and any derivatives exclusively with Microchip products.
 * It is your responsibility to comply with third party license terms applicable
 * to your use of third party software (including open source software) that
 * may accompany Microchip software.
 *
 * THIS SOFTWARE IS SUPPLIED BY MICROCHIP "AS IS". NO WARRANTIES,
 * WHETHER EXPRESS, IMPLIED OR STATUTORY, APPLY TO THIS SOFTWARE,
 * INCLUDING ANY IMPLIED WARRANTIES OF NON-INFRINGEMENT, MERCHANTABILITY,
 * AND FITNESS FOR A PARTICULAR PURPOSE. IN NO EVENT WILL MICROCHIP BE
 * LIABLE FOR ANY INDIRECT, SPECIAL, PUNITIVE, INCIDENTAL OR CONSEQUENTIAL
 * LOSS, DAMAGE, COST OR EXPENSE OF ANY KIND WHATSOEVER RELATED TO THE
 * SOFTWARE, HOWEVER CAUSED, EVEN IF MICROCHIP HAS BEEN ADVISED OF THE
 * POSSIBILITY OR THE DAMAGES ARE FORESEEABLE.  TO THE FULLEST EXTENT
 * ALLOWED BY LAW, MICROCHIP'S TOTAL LIABILITY ON ALL CLAIMS IN ANY WAY
 * RELATED TO THIS SOFTWARE WILL NOT EXCEED THE AMOUNT OF FEES, IF ANY,
 * THAT YOU HAVE PAID DIRECTLY TO MICROCHIP FOR THIS SOFTWARE.
 *
 * \asf_license_stop
 */

/*
 * Copyright (c) 2015-2018, Microchip Technology Inc All rights reserved.
 *
 * Licensed under Atmel's Limited License Agreement --> EULA.txt
 */

/* Prevent double inclusion */
#ifndef PERF_API_SERIAL_HANDLER_H
#define PERF_API_SERIAL_HANDLER_H

/**
 * \ingroup group_perf_analyzer_2
 * \defgroup group_serial_parser Serial Parser
 * Handles all the serial input and output commands.
 * It de-serializes the incoming Performance Analyzer Req Msg packets and calls
 * the corresponding Performance Analyzer APIs to process the request.
 * It also serializes the Performance Analyzer confirmation and indication Msgs
 * which are generated by the application.
 * It expects the packet to be received or send the packets through serial
 * interface in the following format.\n\r
 * ------------------------------------------------------------------\n\r
 * | SOT  | Length | Protocol Id | Msg Id | Msg Payload | EOT |\n\r
 * ------------------------------------------------------------------\n\r
 * \{
 */
/* === Includes ============================================================= */

/* === Types ================================================================ */

/* === Externals ============================================================ */

/* === Prototypes =========================================================== */

#ifdef __cplusplus
extern "C" {
#endif

/**
 * \brief This function does the initialization of the Serial handler state
 * Machine.
 */
void init_sio(trx_id_t trx);

/**
 *   \brief Function to handle the state machine serial data exchange.
 */
void serial_data_handler(void);

/**
 * \brief Function to write messages into UART/USB, used to send assert
 *  messages
 */
void sio_write(uint8_t *message);

/* ! \} */
#ifdef __cplusplus
} /* extern "C" */
#endif

# endif /* PERF_API_SERIAL_HANDLER_H */
/* EOF */
